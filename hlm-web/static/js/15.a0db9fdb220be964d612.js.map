{"version":3,"sources":["webpack:///static/js/15.a0db9fdb220be964d612.js","webpack:///./src/views/MedicalSetting/MedicalSetting.vue?e83a","webpack:///MedicalSetting.vue","webpack:///./src/views/MedicalSetting/MedicalSetting.vue?3974"],"names":["webpackJsonp","1047","module","exports","__webpack_require__","injectStyle","ssrContext","Component","1088","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1__tools_local_storage_js__","data","templateList","cascaderData","userInfo","get","activeName","dialogTitle","filterText","modelParent","showFromOther","showPropOther","disTemp","showEditDetail","parentForm","paramsName","teName","templateName","mainRemark","mainCurrentRemark","mainPastRemark","checkOralRemark","checkAuxiliaryRemark","planDiagnosisRemark","planTreatmentRemark","dmDisposalRemark","dmMedicalRemark","parentRules","required","message","trigger","type","form","code","fatherTemplate","rules","addParentCodeVal","addParentCodeName","watch","val","this","$refs","tree","filter","mounted","getTopMenu","methods","filterNode","name","indexOf","_this","$http","post","then","res","result","arr","addDisabled","returnObject","JSON","parse","$message","error","errorMessage","createTemplate","treeNodeClick","node","vuecomponent","console","log","levelCode","parentCodes","split","parentCode","getTemplateDetail","editTemplate","formName","_this2","success","validate","valid","params","listCode","remark4","resetFields","submitForm","_this3","parentName","pop","remark","handleChangeParent","length","addParentCascader","currentLabels","handleChange","remove","_this4","children","$alert","confirmButtonText","center","callback","action","$confirm","cancelButtonText","catch","_this5","cancle","i","disabled","1172","1280","render","_vm","_h","$createElement","_c","_self","staticClass","model","$$v","expression","attrs","label","_v","staticStyle","padding-bottom","margin-bottom","border-bottom","size","on","click","$event","placeholder","ref","node-key","default-expand-all","expand-on-click-node","filter-node-method","node-click","scopedSlots","_u","key","fn","_s","stopPropagation","preventDefault","_e","max-width","label-width","prop","width","options","props","checkStrictly","change-on-select","expand-trigger","clearable","change","$set","title","visible","update:visible","min-height","expandTrigger","staticRenderFns"],"mappings":"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","file":"static/js/15.a0db9fdb220be964d612.js","sourcesContent":["webpackJsonp([15],{\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(1172)\n}\nvar Component = __webpack_require__(85)(\n  /* script */\n  __webpack_require__(1088),\n  /* template */\n  __webpack_require__(1280),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tools_local_storage_js__ = __webpack_require__(56);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nvar id = 1000;\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      templateList: [],\n      cascaderData: [],\n      userInfo: __WEBPACK_IMPORTED_MODULE_1__tools_local_storage_js__[\"a\" /* default */].get('userInfo'),\n      activeName: 'first',\n      dialogTitle: '',\n      filterText: '',\n      modelParent: false,\n      showFromOther: false,\n      showPropOther: false,\n      disTemp: false,\n      showEditDetail: false,\n      parentForm: {\n        paramsName: '',\n        teName: '',\n        templateName: \"\",\n        mainRemark: '',\n        mainCurrentRemark: '',\n        mainPastRemark: '',\n        checkOralRemark: '',\n        checkAuxiliaryRemark: '',\n        planDiagnosisRemark: '',\n        planTreatmentRemark: '',\n        dmDisposalRemark: '',\n        dmMedicalRemark: ''\n      },\n      parentRules: {\n        teName: [{ required: true, message: '请填写模板目录名称', trigger: 'blur' }],\n        paramsName: [{ type: 'array', required: true, message: '请选择上级目录', trigger: 'blur' }]\n      },\n      form: {\n        code: '',\n        fatherTemplate: [],\n        templateName: '',\n        mainRemark: '',\n        mainCurrentRemark: '',\n        mainPastRemark: '',\n        checkOralRemark: '',\n        checkAuxiliaryRemark: '',\n        planDiagnosisRemark: '',\n        planTreatmentRemark: '',\n        dmDisposalRemark: '',\n        dmMedicalRemark: ''\n      },\n      rules: {\n        templateName: [{ required: true, message: '请填写模板名称', trigger: 'blur' }]\n        // cascader: [\n        //   { type: 'array', required: true, message: '请选择上级目录', trigger: 'blur' }\n        // ],\n      },\n      addParentCodeVal: '',\n      addParentCodeName: ''\n    };\n  },\n\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  mounted: function mounted() {\n    this.getTopMenu();\n  },\n\n  methods: {\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n\n    //获取模板目录\n    getTopMenu: function getTopMenu() {\n      var _this = this;\n\n      this.$http.post('/api/hx/medical/templateList/list.do', {}).then(function (res) {\n        if (res.data.result) {\n          var arr = [];\n          _this.cascaderData = _this.addDisabled(res.data.returnObject);\n          arr = res.data.returnObject;\n          arr = JSON.parse(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(arr));\n          _this.templateList = arr;\n        } else {\n          _this.$message.error(res.data.errorMessage);\n        }\n      });\n    },\n\n\n    //创建模板\n    createTemplate: function createTemplate(name) {\n      this.modelParent = true;\n      if (name == 'addParent') {\n        this.dialogTitle = '创建模板目录';\n        this.showPropOther = false;\n      }\n\n      if (name == 'add') {\n        this.dialogTitle = '创建模板';\n        this.showPropOther = true;\n      }\n    },\n\n\n    //查看模板目录\n    treeNodeClick: function treeNodeClick(data, node, vuecomponent) {\n      console.log('data:', data, '\\n', 'node:', node, '\\n', 'vuecomponent', vuecomponent);\n      this.form.fatherTemplate = [];\n      this.form.templateName = data.name;\n      this.form.code = data.code;\n      this.showEditDetail = true;\n      if (data.levelCode == 1) {\n        this.disTemp = true;\n      } else {\n        this.form.fatherTemplate = data.parentCodes.split(',');\n        this.disTemp = false;\n      }\n\n      if (data.type == 2) {\n        this.showFromOther = true;\n        this.addParentCodeVal = data.parentCode;\n        //获取病历详情\n        this.getTemplateDetail(data.code);\n      } else {\n        this.showFromOther = false;\n      }\n    },\n\n\n    //编辑模板\n    editTemplate: function editTemplate(formName, name) {\n      var _this2 = this;\n\n      if (name == 'menu') {\n        //编辑模板目录\n        if (this.form.templateName) {\n          this.$http.post('/api/hx/medical/templateList/edit.do', {\n            code: this.form.code,\n            name: this.form.templateName\n          }).then(function (res) {\n            if (res.data.result) {\n              _this2.$message.success(\"修改成功\");\n              _this2.getTopMenu();\n              _this2.form.fatherTemplate = [];\n              _this2.form.code = '';\n              _this2.form.templateName = '';\n            } else {\n              _this2.$message.error(res.data.errorMessage);\n            }\n          });\n        } else {\n          this.$message.error('请先填写模板名称');\n        }\n      }\n\n      //编辑模板\n      if (name == 'model') {\n        this.$refs[formName].validate(function (valid) {\n          if (valid) {\n            var params = {\n              name: _this2.form.templateName, //模版名称\n              mainRemark: _this2.form.mainRemark, //主诉\n              mainCurrentRemark: _this2.form.mainCurrentRemark, //现病史\n              mainPastRemark: _this2.form.mainPastRemark, //既往史\n              checkOralRemark: _this2.form.checkOralRemark, //口腔检查\n              checkAuxiliaryRemark: _this2.form.checkAuxiliaryRemark, //辅助检查\n              planDiagnosisRemark: _this2.form.planDiagnosisRemark, //诊断\n              planTreatmentRemark: _this2.form.planTreatmentRemark, //治疗计划\n              dmDisposalRemark: _this2.form.dmDisposalRemark, //处置\n              dmMedicalRemark: _this2.form.dmMedicalRemark, //医嘱\n              listCode: _this2.addParentCodeVal, //模版目录Code\n              remark4: _this2.form.templateName,\n              code: _this2.form.code\n            };\n\n            _this2.$http.post('/api/hx/medical/template/edit.do', params).then(function (res) {\n              if (res.data.result) {\n                _this2.getTopMenu();\n                _this2.$message.success(\"修改模板成功\");\n                _this2.form.mainRemark = '';\n                _this2.$refs[formName].resetFields();\n              } else {\n                _this2.$message.error(res.data.errorMessage);\n              }\n            });\n          }\n        });\n      }\n      this.showEditDetail = false;\n    },\n\n\n    //新建模板\n    submitForm: function submitForm(formName, name) {\n      var _this3 = this;\n\n      //添加模板目录\n      if (formName == 'parentForm' && name == 'menu') {\n        this.$refs[formName].validate(function (valid) {\n          if (valid) {\n            _this3.$http.post('/api/hx/medical/templateList/add.do', {\n              name: _this3.parentForm.teName,\n              parentCode: _this3.addParentCodeVal,\n              parentName: _this3.addParentCodeName.pop()\n            }).then(function (res) {\n              if (res.data.result) {\n                _this3.$message.success(\"创建模板目录成功\");\n                _this3.$refs[formName].resetFields();\n                _this3.modelParent = false;\n                _this3.getTopMenu();\n              } else {\n                _this3.$message.error(res.data.errorMessage);\n              }\n            });\n          }\n        });\n      }\n\n      //添加模板病历\n      if (formName == 'parentForm' && name == 'model') {\n        this.$refs[formName].validate(function (valid) {\n          if (valid) {\n            var params = {\n              name: _this3.parentForm.teName, //模版名称\n              mainRemark: _this3.parentForm.mainRemark, //主诉\n              mainCurrentRemark: _this3.parentForm.mainCurrentRemark, //现病史\n              mainPastRemark: _this3.parentForm.mainPastRemark, //既往史\n              checkOralRemark: _this3.parentForm.checkOralRemark, //口腔检查\n              checkAuxiliaryRemark: _this3.parentForm.checkAuxiliaryRemark, //辅助检查\n              planDiagnosisRemark: _this3.parentForm.planDiagnosisRemark, //诊断\n              planTreatmentRemark: _this3.parentForm.planTreatmentRemark, //治疗计划\n              dmDisposalRemark: _this3.parentForm.dmDisposalRemark, //处置\n              dmMedicalRemark: _this3.parentForm.dmMedicalRemark, //医嘱\n              listCode: _this3.addParentCodeVal, //模版目录Code\n              remark: ''\n            };\n\n            _this3.$http.post('/api/hx/medical/template/add.do', params).then(function (res) {\n              if (res.data.result) {\n                _this3.$message.success(\"创建模板成功\");\n                _this3.modelParent = false;\n                _this3.$refs[formName].resetFields();\n                _this3.getTopMenu();\n              } else {\n                _this3.$message.error(res.data.errorMessage);\n              }\n            });\n          }\n        });\n      }\n    },\n    handleChangeParent: function handleChangeParent(value) {\n      // console.log(value)\n      this.addParentCodeVal = value[value.length - 1];\n      this.addParentCodeName = this.$refs.addParentCascader.currentLabels;\n    },\n    handleChange: function handleChange(value) {\n      // console.log(value)\n      // console.log(this.$refs.myCascader.currentLabels)\n    },\n\n\n    //删除模板目录\n    remove: function remove(node, data) {\n      var _this4 = this;\n\n      if (data.children && data.children.length > 0) {\n        this.$alert('请先删除子目录或模板?', '提示', {\n          confirmButtonText: '确定',\n          center: true,\n          callback: function callback(action) {}\n        });\n      } else {\n        this.$confirm('确定要删除当前模板吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n          center: true\n        }).then(function () {\n\n          _this4.$http.post('/api/hx/medical/templateList/del.do', {\n            code: data.code,\n            type: data.type\n          }).then(function (res) {\n            if (res.data.result) {\n              _this4.$message.success('删除成功!');\n              _this4.getTopMenu();\n            } else {\n              _this4.$message.error(res.data.errorMessage);\n            }\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      }\n    },\n\n\n    //获取模板病历详情\n    getTemplateDetail: function getTemplateDetail(code) {\n      var _this5 = this;\n\n      this.$http.post('/api/hx/medical/template/get.do', {\n        code: code\n      }).then(function (res) {\n        if (res.data.result) {\n          var data = res.data.returnObject;\n          _this5.form.mainRemark = data.mainRemark;\n          _this5.form.mainCurrentRemark = data.mainCurrentRemark;\n          _this5.form.mainPastRemark = data.mainPastRemark;\n          _this5.form.checkOralRemark = data.checkOralRemark;\n          _this5.form.checkAuxiliaryRemark = data.checkAuxiliaryRemark;\n          _this5.form.planDiagnosisRemark = data.planDiagnosisRemark;\n          _this5.form.planTreatmentRemark = data.planTreatmentRemark;\n          _this5.form.dmDisposalRemark = data.dmDisposalRemark;\n          _this5.form.dmMedicalRemark = data.dmMedicalRemark;\n        }\n      });\n    },\n    cancle: function cancle() {\n      this.showEditDetail = false;\n      this.form.mainRemark = '';\n      this.$refs[formName].resetFields();\n    },\n\n\n    //递归给 type==2 的模板加上禁用选项\n    addDisabled: function addDisabled(data) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].type == '2') {\n          data[i].disabled = true;\n        } else {\n          data[i].disabled = false;\n          this.addDisabled(data[i].children);\n        }\n      }\n      return data;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 1172:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 1280:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ChargeMoney\"\n  }, [_c('div', {}, [_c('el-tabs', {\n    model: {\n      value: (_vm.activeName),\n      callback: function($$v) {\n        _vm.activeName = $$v\n      },\n      expression: \"activeName\"\n    }\n  }, [_c('el-tab-pane', {\n    attrs: {\n      \"label\": \"病历模板\",\n      \"name\": \"first\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticStyle: {\n      \"padding-bottom\": \"15px\",\n      \"margin-bottom\": \"15px\",\n      \"border-bottom\": \"1px solid #f1f1f1\"\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.createTemplate('addParent')\n      }\n    }\n  }, [_vm._v(\"创建模板目录\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.createTemplate('add')\n      }\n    }\n  }, [_vm._v(\"创建模板\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tree-container\"\n  }, [_c('div', {\n    staticStyle: {\n      \"margin-bottom\": \"10px\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"size\": \"small\",\n      \"placeholder\": \"输入关键字进行过滤\"\n    },\n    model: {\n      value: (_vm.filterText),\n      callback: function($$v) {\n        _vm.filterText = $$v\n      },\n      expression: \"filterText\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-tree', {\n    ref: \"tree\",\n    attrs: {\n      \"data\": _vm.templateList,\n      \"node-key\": \"code\",\n      \"default-expand-all\": \"\",\n      \"expand-on-click-node\": false,\n      \"filter-node-method\": _vm.filterNode\n    },\n    on: {\n      \"node-click\": _vm.treeNodeClick\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(ref) {\n        var node = ref.node;\n        var data = ref.data;\n\n        return _c('span', {\n          staticClass: \"custom-tree-node\"\n        }, [_c('span', [_vm._v(_vm._s(data.name))]), _vm._v(\" \"), (data.levelCode != 1) ? _c('span', {\n          staticClass: \"fl-r cf\"\n        }, [_c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"mini\"\n          },\n          on: {\n            \"click\": function($event) {\n              $event.stopPropagation();\n              $event.preventDefault();\n              return (function () { return _vm.remove(node, data); })($event)\n            }\n          }\n        }, [_vm._v(\"删除\")])], 1) : _vm._e()])\n      }\n    }])\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"detail-container\"\n  }, [(_vm.showEditDetail) ? _c('div', [_c('el-form', {\n    ref: \"form\",\n    staticStyle: {\n      \"max-width\": \"700px\"\n    },\n    attrs: {\n      \"model\": _vm.form,\n      \"rules\": _vm.rules,\n      \"label-width\": \"100px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"上级目录\",\n      \"prop\": \"cascader\"\n    }\n  }, [_c('el-cascader', {\n    ref: \"myCascader\",\n    staticStyle: {\n      \"width\": \"400px\"\n    },\n    attrs: {\n      \"disabled\": \"\",\n      \"options\": _vm.cascaderData,\n      \"props\": {\n        checkStrictly: true,\n        value: 'code',\n        label: 'name'\n      },\n      \"change-on-select\": true,\n      \"expand-trigger\": \"hover\",\n      \"clearable\": \"\"\n    },\n    on: {\n      \"change\": _vm.handleChange\n    },\n    model: {\n      value: (_vm.form.fatherTemplate),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"fatherTemplate\", $$v)\n      },\n      expression: \"form.fatherTemplate\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"名称\",\n      \"prop\": \"templateName\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"disabled\": _vm.disTemp,\n      \"placeholder\": \"请输入模板名称\"\n    },\n    model: {\n      value: (_vm.form.templateName),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"templateName\", $$v)\n      },\n      expression: \"form.templateName\"\n    }\n  })], 1), _vm._v(\" \"), (!_vm.showFromOther) ? _c('span', [_c('el-form-item', [_c('el-button', {\n    on: {\n      \"click\": _vm.cancle\n    }\n  }, [_vm._v(\"取消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.editTemplate('form', 'menu')\n      }\n    }\n  }, [_vm._v(\"保存\")])], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showFromOther) ? _c('span', [_c('el-form-item', {\n    attrs: {\n      \"label\": \"主诉\",\n      \"prop\": \"mainRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainRemark\", $$v)\n      },\n      expression: \"form.mainRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"现病史\",\n      \"prop\": \"mainCurrentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainCurrentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainCurrentRemark\", $$v)\n      },\n      expression: \"form.mainCurrentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"既往史\",\n      \"prop\": \"mainPastRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainPastRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainPastRemark\", $$v)\n      },\n      expression: \"form.mainPastRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"口腔检查\",\n      \"prop\": \"checkOralRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.checkOralRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"checkOralRemark\", $$v)\n      },\n      expression: \"form.checkOralRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"辅助检查\",\n      \"prop\": \"checkAuxiliaryRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.checkAuxiliaryRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"checkAuxiliaryRemark\", $$v)\n      },\n      expression: \"form.checkAuxiliaryRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"诊断\",\n      \"prop\": \"planDiagnosisRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.planDiagnosisRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"planDiagnosisRemark\", $$v)\n      },\n      expression: \"form.planDiagnosisRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"治疗方案\",\n      \"prop\": \"planTreatmentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.planTreatmentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"planTreatmentRemark\", $$v)\n      },\n      expression: \"form.planTreatmentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"处置\",\n      \"prop\": \"dmDisposalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.dmDisposalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"dmDisposalRemark\", $$v)\n      },\n      expression: \"form.dmDisposalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"医嘱\",\n      \"prop\": \"dmMedicalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.dmMedicalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"dmMedicalRemark\", $$v)\n      },\n      expression: \"form.dmMedicalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    on: {\n      \"click\": _vm.cancle\n    }\n  }, [_vm._v(\"取消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.editTemplate('form', 'model')\n      }\n    }\n  }, [_vm._v(\"保存\")])], 1)], 1) : _vm._e()], 1)], 1) : _vm._e()])])]), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogTitle,\n      \"visible\": _vm.modelParent,\n      \"center\": \"\"\n    },\n    on: {\n      \"update:visible\": function($event) {\n        _vm.modelParent = $event\n      }\n    }\n  }, [_c('div', [_c('el-form', {\n    ref: \"parentForm\",\n    staticStyle: {\n      \"max-width\": \"700px\",\n      \"min-height\": \"400px\"\n    },\n    attrs: {\n      \"model\": _vm.parentForm,\n      \"rules\": _vm.parentRules,\n      \"label-width\": \"100px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"上级目录\",\n      \"prop\": \"paramsName\"\n    }\n  }, [_c('el-cascader', {\n    ref: \"addParentCascader\",\n    staticStyle: {\n      \"width\": \"600px\"\n    },\n    attrs: {\n      \"options\": _vm.cascaderData,\n      \"props\": {\n        checkStrictly: true,\n        value: 'code',\n        label: 'name',\n        expandTrigger: 'hover'\n      },\n      \"change-on-select\": true,\n      \"expand-trigger\": \"hover\",\n      \"clearable\": \"\"\n    },\n    on: {\n      \"change\": _vm.handleChangeParent\n    },\n    model: {\n      value: (_vm.parentForm.paramsName),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"paramsName\", $$v)\n      },\n      expression: \"parentForm.paramsName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"名称\",\n      \"prop\": \"teName\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入模板名称\"\n    },\n    model: {\n      value: (_vm.parentForm.teName),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"teName\", $$v)\n      },\n      expression: \"parentForm.teName\"\n    }\n  })], 1), _vm._v(\" \"), (!_vm.showPropOther) ? _c('div', [_c('br'), _c('br'), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submitForm('parentForm', 'menu')\n      }\n    }\n  }, [_vm._v(\"保存\")]), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.modelParent = false\n      }\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showPropOther) ? _c('div', [_c('el-form-item', {\n    attrs: {\n      \"label\": \"主诉\",\n      \"prop\": \"mainRemark\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.parentForm.mainRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainRemark\", $$v)\n      },\n      expression: \"parentForm.mainRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"现病史\",\n      \"prop\": \"mainCurrentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.mainCurrentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainCurrentRemark\", $$v)\n      },\n      expression: \"parentForm.mainCurrentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"既往史\",\n      \"prop\": \"mainPastRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.mainPastRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainPastRemark\", $$v)\n      },\n      expression: \"parentForm.mainPastRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"口腔检查\",\n      \"prop\": \"checkOralRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.checkOralRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"checkOralRemark\", $$v)\n      },\n      expression: \"parentForm.checkOralRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"辅助检查\",\n      \"prop\": \"checkAuxiliaryRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.checkAuxiliaryRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"checkAuxiliaryRemark\", $$v)\n      },\n      expression: \"parentForm.checkAuxiliaryRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"诊断\",\n      \"prop\": \"planDiagnosisRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.planDiagnosisRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"planDiagnosisRemark\", $$v)\n      },\n      expression: \"parentForm.planDiagnosisRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"治疗方案\",\n      \"prop\": \"planTreatmentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.planTreatmentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"planTreatmentRemark\", $$v)\n      },\n      expression: \"parentForm.planTreatmentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"处置\",\n      \"prop\": \"dmDisposalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.dmDisposalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"dmDisposalRemark\", $$v)\n      },\n      expression: \"parentForm.dmDisposalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"医嘱\",\n      \"prop\": \"dmMedicalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.dmMedicalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"dmMedicalRemark\", $$v)\n      },\n      expression: \"parentForm.dmMedicalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submitForm('parentForm', 'model')\n      }\n    }\n  }, [_vm._v(\"保存\")]), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.modelParent = false\n      }\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1) : _vm._e()], 1)], 1)])], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/15.a0db9fdb220be964d612.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5b657466\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=styles&index=0!./MedicalSetting.vue\")\n}\nvar Component = require(\"!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=script&index=0!./MedicalSetting.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5b657466\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/_vue-loader@12.2.2@vue-loader/lib/selector?type=template&index=0!./MedicalSetting.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/MedicalSetting/MedicalSetting.vue\n// module id = 1047\n// module chunks = 15","<template>\r\n<div class=\"ChargeMoney\">\r\n  <div class=\"\">\r\n    <el-tabs v-model=\"activeName\">\r\n      <el-tab-pane label=\"病历模板\" name=\"first\">\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n  <el-card class=\"box-card\">\r\n    <div class=\"container\">\r\n      <div style=\"padding-bottom:15px;margin-bottom:15px;border-bottom:1px solid #f1f1f1;\">\r\n        <el-button size=\"mini\" @click=\"createTemplate('addParent')\">创建模板目录</el-button>\r\n        <el-button size=\"mini\" @click=\"createTemplate('add')\">创建模板</el-button>\r\n      </div>\r\n      <div class=\"tree-container\">\r\n        <div style=\"margin-bottom:10px;\">\r\n          <el-input size=\"small\" placeholder=\"输入关键字进行过滤\" v-model=\"filterText\"> </el-input>\r\n        </div>\r\n        <el-tree\r\n          ref=\"tree\"\r\n          :data=\"templateList\"\r\n          node-key=\"code\"\r\n          default-expand-all\r\n          :expand-on-click-node=\"false\"\r\n          :filter-node-method=\"filterNode\"\r\n          @node-click=\"treeNodeClick\">\r\n          <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n            <span>{{ data.name }}</span>\r\n            <span class=\"fl-r cf\" v-if=\"data.levelCode != 1\">\r\n              <el-button type=\"text\" size=\"mini\" @click.stop.prevent=\"() => remove(node, data)\">删除</el-button>\r\n            </span>\r\n          </span>\r\n        </el-tree>\r\n      </div>\r\n      <div class=\"detail-container\">\r\n        <div v-if=\"showEditDetail\">\r\n          <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\"style=\"max-width:700px;\">\r\n            <el-form-item label=\"上级目录\" prop=\"cascader\">\r\n              <el-cascader\r\n                disabled\r\n                ref=\"myCascader\"\r\n                v-model=\"form.fatherTemplate\"\r\n                :options=\"cascaderData\"\r\n                :props=\"{ checkStrictly: true,value: 'code', label: 'name'}\"\r\n                :change-on-select=\"true\"\r\n                 @change=\"handleChange\"\r\n                 expand-trigger=\"hover\"\r\n                clearable\r\n                style=\"width:400px\"\r\n              >\r\n              </el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"名称\" prop=\"templateName\">\r\n              <el-input :disabled='disTemp' v-model=\"form.templateName\" placeholder=\"请输入模板名称\"></el-input>\r\n            </el-form-item>\r\n        <span v-if=\"!showFromOther\">\r\n            <el-form-item>\r\n              <el-button @click=\"cancle\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"editTemplate('form', 'menu')\">保存</el-button>\r\n            </el-form-item>\r\n        </span>\r\n        <span v-if=\"showFromOther\">\r\n            <el-form-item label=\"主诉\" prop=\"mainRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.mainRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"现病史\" prop=\"mainCurrentRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.mainCurrentRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"既往史\" prop=\"mainPastRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.mainPastRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"口腔检查\" prop=\"checkOralRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.checkOralRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"辅助检查\" prop=\"checkAuxiliaryRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.checkAuxiliaryRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"诊断\" prop=\"planDiagnosisRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.planDiagnosisRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"治疗方案\" prop=\"planTreatmentRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.planTreatmentRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"处置\" prop=\"dmDisposalRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.dmDisposalRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"医嘱\" prop=\"dmMedicalRemark\">\r\n              <el-input type=\"textarea\" v-model=\"form.dmMedicalRemark\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button @click=\"cancle\">取消</el-button>\r\n              <el-button type=\"primary\" @click=\"editTemplate('form', 'model')\">保存</el-button>\r\n            </el-form-item>\r\n        </span>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </el-card>\r\n\r\n  <el-dialog :title=\"dialogTitle\" :visible.sync=\"modelParent\" center>\r\n    <div>\r\n        <el-form ref=\"parentForm\" :model=\"parentForm\" :rules=\"parentRules\" label-width=\"100px\"style=\"max-width:700px;min-height:400px;\">\r\n          <el-form-item label=\"上级目录\" prop=\"paramsName\">\r\n            <el-cascader\r\n                ref=\"addParentCascader\"\r\n                v-model=\"parentForm.paramsName\"\r\n                :options=\"cascaderData\"\r\n                :props=\"{ checkStrictly: true,value: 'code', label: 'name', expandTrigger: 'hover' }\"\r\n                :change-on-select=\"true\"\r\n                @change=\"handleChangeParent\"\r\n                expand-trigger=\"hover\"\r\n                clearable\r\n                style=\"width:600px\"\r\n                ></el-cascader>\r\n          </el-form-item>\r\n          <el-form-item label=\"名称\" prop=\"teName\">\r\n            <el-input v-model=\"parentForm.teName\" placeholder=\"请输入模板名称\"></el-input>\r\n          </el-form-item>\r\n        <div v-if=\"!showPropOther\">\r\n          <br><br>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('parentForm', 'menu')\">保存</el-button>\r\n            <el-button @click=\"modelParent = false\">取消</el-button>\r\n          </el-form-item>\r\n        </div>\r\n        <div v-if=\"showPropOther\">\r\n          <el-form-item label=\"主诉\" prop=\"mainRemark\">\r\n            <el-input v-model=\"parentForm.mainRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"现病史\" prop=\"mainCurrentRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.mainCurrentRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"既往史\" prop=\"mainPastRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.mainPastRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"口腔检查\" prop=\"checkOralRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.checkOralRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"辅助检查\" prop=\"checkAuxiliaryRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.checkAuxiliaryRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"诊断\" prop=\"planDiagnosisRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.planDiagnosisRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"治疗方案\" prop=\"planTreatmentRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.planTreatmentRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"处置\" prop=\"dmDisposalRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.dmDisposalRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"医嘱\" prop=\"dmMedicalRemark\">\r\n            <el-input type=\"textarea\" v-model=\"parentForm.dmMedicalRemark\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('parentForm', 'model')\">保存</el-button>\r\n            <el-button @click=\"modelParent = false\">取消</el-button>\r\n          </el-form-item>\r\n        </div>\r\n\r\n      </el-form>\r\n    </div>\r\n  </el-dialog>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport storage from '@/tools/local_storage.js'\r\n\r\nlet id = 1000;\r\nexport default {\r\n  data() {\r\n    return {\r\n      templateList: [],\r\n      cascaderData: [],\r\n      userInfo:  storage.get('userInfo'),\r\n      activeName:'first',\r\n      dialogTitle: '',\r\n      filterText: '',\r\n      modelParent: false,\r\n      showFromOther: false,\r\n      showPropOther: false,\r\n      disTemp: false,\r\n      showEditDetail: false,\r\n      parentForm: {\r\n        paramsName: '',\r\n        teName: '',\r\n        templateName: \"\",\r\n        mainRemark: '',\r\n        mainCurrentRemark: '',\r\n        mainPastRemark: '',\r\n        checkOralRemark: '',\r\n        checkAuxiliaryRemark: '',\r\n        planDiagnosisRemark: '',\r\n        planTreatmentRemark: '',\r\n        dmDisposalRemark: '',\r\n        dmMedicalRemark: '',\r\n      },\r\n      parentRules: {\r\n          teName: [\r\n            { required: true, message: '请填写模板目录名称', trigger: 'blur' }\r\n          ],\r\n          paramsName: [\r\n            { type: 'array', required: true, message: '请选择上级目录', trigger: 'blur' }\r\n          ],\r\n      },\r\n      form: {\r\n        code: '',\r\n        fatherTemplate: [],\r\n        templateName: '',\r\n        mainRemark: '',\r\n        mainCurrentRemark: '',\r\n        mainPastRemark: '',\r\n        checkOralRemark: '',\r\n        checkAuxiliaryRemark: '',\r\n        planDiagnosisRemark: '',\r\n        planTreatmentRemark: '',\r\n        dmDisposalRemark: '',\r\n        dmMedicalRemark: '',\r\n      },\r\n      rules: {\r\n          templateName: [\r\n            { required: true, message: '请填写模板名称', trigger: 'blur' },\r\n          ],\r\n          // cascader: [\r\n          //   { type: 'array', required: true, message: '请选择上级目录', trigger: 'blur' }\r\n          // ],\r\n      },\r\n      addParentCodeVal: '',\r\n      addParentCodeName: '',\r\n    }\r\n  },\r\n  watch: {\r\n      filterText(val) {\r\n        this.$refs.tree.filter(val);\r\n      }\r\n    },\r\n  mounted() {\r\n      this.getTopMenu()\r\n  },\r\n  methods: {\r\n    filterNode(value, data) {\r\n        if (!value) return true;\r\n        return data.name.indexOf(value) !== -1;\r\n      },\r\n    //获取模板目录\r\n    getTopMenu () {\r\n      this.$http.post('/api/hx/medical/templateList/list.do',{}).then( res => {\r\n        if (res.data.result) {\r\n          let arr = []\r\n          this.cascaderData = this.addDisabled(res.data.returnObject)\r\n          arr = res.data.returnObject\r\n          arr = JSON.parse(JSON.stringify(arr))\r\n          this.templateList = arr\r\n        } else {\r\n          this.$message.error(res.data.errorMessage)\r\n        }\r\n\r\n      })\r\n    },\r\n\r\n    //创建模板\r\n    createTemplate (name) {\r\n      this.modelParent = true\r\n      if (name == 'addParent') {\r\n        this.dialogTitle = '创建模板目录'\r\n        this.showPropOther = false\r\n      }\r\n\r\n      if (name == 'add') {\r\n        this.dialogTitle = '创建模板'\r\n        this.showPropOther = true\r\n      }\r\n    },\r\n\r\n    //查看模板目录\r\n    treeNodeClick(data, node, vuecomponent){\r\n       console.log('data:',  data,'\\n' ,'node:', node, '\\n', 'vuecomponent',vuecomponent)\r\n      this.form.fatherTemplate = []\r\n      this.form.templateName = data.name\r\n      this.form.code = data.code\r\n      this.showEditDetail = true\r\n      if (data.levelCode == 1) {\r\n         this.disTemp = true\r\n      } else {\r\n        this.form.fatherTemplate = data.parentCodes.split(',')\r\n        this.disTemp = false\r\n      }\r\n\r\n      if (data.type == 2) {\r\n        this.showFromOther = true\r\n        this.addParentCodeVal = data.parentCode\r\n        //获取病历详情\r\n        this.getTemplateDetail(data.code)\r\n      } else {\r\n        this.showFromOther = false\r\n      }\r\n\r\n    },\r\n\r\n    //编辑模板\r\n    editTemplate (formName, name) {\r\n      if (name == 'menu') { //编辑模板目录\r\n            if (this.form.templateName) {\r\n              this.$http.post('/api/hx/medical/templateList/edit.do',{\r\n                code: this.form.code,\r\n                name: this.form.templateName\r\n              }).then(res=>{\r\n                if (res.data.result) {\r\n                  this.$message.success(\"修改成功\")\r\n                  this.getTopMenu()\r\n                  this.form.fatherTemplate = []\r\n                  this.form.code = ''\r\n                  this.form.templateName = ''\r\n                } else {\r\n                  this.$message.error(res.data.errorMessage)\r\n                }\r\n              })\r\n            } else {\r\n              this.$message.error('请先填写模板名称')\r\n            }\r\n      }\r\n\r\n      //编辑模板\r\n      if (name == 'model') {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let params = {\r\n              name: this.form.templateName,   //模版名称\r\n              mainRemark: this.form.mainRemark,   //主诉\r\n              mainCurrentRemark: this.form.mainCurrentRemark, //现病史\r\n              mainPastRemark: this.form.mainPastRemark, //既往史\r\n              checkOralRemark: this.form.checkOralRemark,  //口腔检查\r\n              checkAuxiliaryRemark: this.form.checkAuxiliaryRemark, //辅助检查\r\n              planDiagnosisRemark: this.form.planDiagnosisRemark, //诊断\r\n              planTreatmentRemark: this.form.planTreatmentRemark, //治疗计划\r\n              dmDisposalRemark: this.form.dmDisposalRemark,   //处置\r\n              dmMedicalRemark: this.form.dmMedicalRemark,   //医嘱\r\n              listCode: this.addParentCodeVal,   //模版目录Code\r\n              remark4: this.form.templateName,\r\n              code: this.form.code ,\r\n            }\r\n\r\n            this.$http.post('/api/hx/medical/template/edit.do',params).then(res=>{\r\n              if (res.data.result) {\r\n                this.getTopMenu()\r\n                this.$message.success(\"修改模板成功\")\r\n                this.form.mainRemark = ''\r\n                this.$refs[formName].resetFields()\r\n\r\n              } else {\r\n                this.$message.error(res.data.errorMessage)\r\n              }\r\n            })\r\n          }\r\n        });\r\n      }\r\n      this.showEditDetail = false\r\n    },\r\n\r\n    //新建模板\r\n    submitForm(formName, name) {\r\n\r\n      //添加模板目录\r\n      if (formName == 'parentForm' && name == 'menu' ) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            this.$http.post('/api/hx/medical/templateList/add.do',{\r\n              name: this.parentForm.teName,\r\n              parentCode: this.addParentCodeVal,\r\n              parentName: this.addParentCodeName.pop()\r\n            }).then(res=>{\r\n              if (res.data.result) {\r\n                this.$message.success(\"创建模板目录成功\")\r\n                this.$refs[formName].resetFields()\r\n                this.modelParent = false\r\n                this.getTopMenu()\r\n              } else {\r\n                this.$message.error(res.data.errorMessage)\r\n              }\r\n            })\r\n\r\n          }\r\n        });\r\n      }\r\n\r\n      //添加模板病历\r\n      if (formName == 'parentForm' && name == 'model' ) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let params = {\r\n              name: this.parentForm.teName,   //模版名称\r\n              mainRemark: this.parentForm.mainRemark,   //主诉\r\n              mainCurrentRemark: this.parentForm.mainCurrentRemark, //现病史\r\n              mainPastRemark: this.parentForm.mainPastRemark, //既往史\r\n              checkOralRemark: this.parentForm.checkOralRemark,  //口腔检查\r\n              checkAuxiliaryRemark: this.parentForm.checkAuxiliaryRemark, //辅助检查\r\n              planDiagnosisRemark: this.parentForm.planDiagnosisRemark, //诊断\r\n              planTreatmentRemark: this.parentForm.planTreatmentRemark, //治疗计划\r\n              dmDisposalRemark: this.parentForm.dmDisposalRemark,   //处置\r\n              dmMedicalRemark: this.parentForm.dmMedicalRemark,   //医嘱\r\n              listCode: this.addParentCodeVal,   //模版目录Code\r\n              remark: '',\r\n            }\r\n\r\n            this.$http.post('/api/hx/medical/template/add.do',params).then(res=>{\r\n              if (res.data.result) {\r\n                this.$message.success(\"创建模板成功\")\r\n                this.modelParent = false\r\n                this.$refs[formName].resetFields()\r\n                this.getTopMenu()\r\n              } else {\r\n                this.$message.error(res.data.errorMessage)\r\n              }\r\n            })\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    handleChangeParent (value) {\r\n      // console.log(value)\r\n      this.addParentCodeVal = value[value.length-1]\r\n      this.addParentCodeName = this.$refs.addParentCascader.currentLabels\r\n    },\r\n\r\n\r\n    handleChange(value) {\r\n      // console.log(value)\r\n      // console.log(this.$refs.myCascader.currentLabels)\r\n    },\r\n\r\n\r\n    //删除模板目录\r\n     remove(node, data) {\r\n       if (data.children && data.children.length > 0) {\r\n          this.$alert('请先删除子目录或模板?', '提示', {\r\n            confirmButtonText: '确定',\r\n            center: true,\r\n            callback: action => {}\r\n          });\r\n       } else {\r\n         this.$confirm('确定要删除当前模板吗?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning',\r\n            center: true\r\n          }).then(() => {\r\n\r\n            this.$http.post('/api/hx/medical/templateList/del.do',{\r\n              code: data.code,\r\n              type: data.type\r\n            }).then(res=>{\r\n              if (res.data.result) {\r\n                this.$message.success('删除成功!')\r\n                this.getTopMenu()\r\n              } else {\r\n                this.$message.error(res.data.errorMessage)\r\n              }\r\n            })\r\n\r\n          }).catch(() => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '已取消删除'\r\n            });\r\n          });\r\n\r\n       }\r\n     },\r\n\r\n    //获取模板病历详情\r\n    getTemplateDetail (code) {\r\n      this.$http.post('/api/hx/medical/template/get.do',{\r\n        code: code\r\n      }).then(res => {\r\n        if (res.data.result) {\r\n          let data = res.data.returnObject\r\n          this.form.mainRemark = data.mainRemark\r\n          this.form.mainCurrentRemark = data.mainCurrentRemark\r\n          this.form.mainPastRemark= data.mainPastRemark\r\n          this.form.checkOralRemark= data.checkOralRemark\r\n          this.form.checkAuxiliaryRemark= data.checkAuxiliaryRemark\r\n          this.form.planDiagnosisRemark= data.planDiagnosisRemark\r\n          this.form.planTreatmentRemark= data.planTreatmentRemark\r\n          this.form.dmDisposalRemark= data.dmDisposalRemark\r\n          this.form.dmMedicalRemark= data.dmMedicalRemark\r\n        }\r\n      })\r\n    },\r\n\r\n    cancle () {\r\n      this.showEditDetail = false\r\n      this.form.mainRemark = ''\r\n      this.$refs[formName].resetFields()\r\n    },\r\n\r\n    //递归给 type==2 的模板加上禁用选项\r\n    addDisabled (data) {\r\n      for (var i=0; i<data.length;i++) {\r\n        if (data[i].type == '2') {\r\n          data[i].disabled = true\r\n        } else {\r\n          data[i].disabled = false\r\n          this.addDisabled(data[i].children)\r\n        }\r\n      }\r\n      return data\r\n    }\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.custom-tree-node{\r\n  width: 100%;\r\n  .fl-r{\r\n    float: right;\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n.container{\r\n  width: 100%;\r\n  background: #fff;\r\n  .tree-container{\r\n    width: 28%;\r\n    display: inline-block;\r\n    padding-right: 15px;\r\n  }\r\n  .detail-container{\r\n    width: 69%;\r\n    display: inline-block;\r\n    border-left: 1px solid #f1f1f1;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// MedicalSetting.vue?5e3e4d89","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"ChargeMoney\"\n  }, [_c('div', {}, [_c('el-tabs', {\n    model: {\n      value: (_vm.activeName),\n      callback: function($$v) {\n        _vm.activeName = $$v\n      },\n      expression: \"activeName\"\n    }\n  }, [_c('el-tab-pane', {\n    attrs: {\n      \"label\": \"病历模板\",\n      \"name\": \"first\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticStyle: {\n      \"padding-bottom\": \"15px\",\n      \"margin-bottom\": \"15px\",\n      \"border-bottom\": \"1px solid #f1f1f1\"\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.createTemplate('addParent')\n      }\n    }\n  }, [_vm._v(\"创建模板目录\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"size\": \"mini\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.createTemplate('add')\n      }\n    }\n  }, [_vm._v(\"创建模板\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"tree-container\"\n  }, [_c('div', {\n    staticStyle: {\n      \"margin-bottom\": \"10px\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"size\": \"small\",\n      \"placeholder\": \"输入关键字进行过滤\"\n    },\n    model: {\n      value: (_vm.filterText),\n      callback: function($$v) {\n        _vm.filterText = $$v\n      },\n      expression: \"filterText\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-tree', {\n    ref: \"tree\",\n    attrs: {\n      \"data\": _vm.templateList,\n      \"node-key\": \"code\",\n      \"default-expand-all\": \"\",\n      \"expand-on-click-node\": false,\n      \"filter-node-method\": _vm.filterNode\n    },\n    on: {\n      \"node-click\": _vm.treeNodeClick\n    },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function(ref) {\n        var node = ref.node;\n        var data = ref.data;\n\n        return _c('span', {\n          staticClass: \"custom-tree-node\"\n        }, [_c('span', [_vm._v(_vm._s(data.name))]), _vm._v(\" \"), (data.levelCode != 1) ? _c('span', {\n          staticClass: \"fl-r cf\"\n        }, [_c('el-button', {\n          attrs: {\n            \"type\": \"text\",\n            \"size\": \"mini\"\n          },\n          on: {\n            \"click\": function($event) {\n              $event.stopPropagation();\n              $event.preventDefault();\n              return (function () { return _vm.remove(node, data); })($event)\n            }\n          }\n        }, [_vm._v(\"删除\")])], 1) : _vm._e()])\n      }\n    }])\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"detail-container\"\n  }, [(_vm.showEditDetail) ? _c('div', [_c('el-form', {\n    ref: \"form\",\n    staticStyle: {\n      \"max-width\": \"700px\"\n    },\n    attrs: {\n      \"model\": _vm.form,\n      \"rules\": _vm.rules,\n      \"label-width\": \"100px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"上级目录\",\n      \"prop\": \"cascader\"\n    }\n  }, [_c('el-cascader', {\n    ref: \"myCascader\",\n    staticStyle: {\n      \"width\": \"400px\"\n    },\n    attrs: {\n      \"disabled\": \"\",\n      \"options\": _vm.cascaderData,\n      \"props\": {\n        checkStrictly: true,\n        value: 'code',\n        label: 'name'\n      },\n      \"change-on-select\": true,\n      \"expand-trigger\": \"hover\",\n      \"clearable\": \"\"\n    },\n    on: {\n      \"change\": _vm.handleChange\n    },\n    model: {\n      value: (_vm.form.fatherTemplate),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"fatherTemplate\", $$v)\n      },\n      expression: \"form.fatherTemplate\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"名称\",\n      \"prop\": \"templateName\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"disabled\": _vm.disTemp,\n      \"placeholder\": \"请输入模板名称\"\n    },\n    model: {\n      value: (_vm.form.templateName),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"templateName\", $$v)\n      },\n      expression: \"form.templateName\"\n    }\n  })], 1), _vm._v(\" \"), (!_vm.showFromOther) ? _c('span', [_c('el-form-item', [_c('el-button', {\n    on: {\n      \"click\": _vm.cancle\n    }\n  }, [_vm._v(\"取消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.editTemplate('form', 'menu')\n      }\n    }\n  }, [_vm._v(\"保存\")])], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showFromOther) ? _c('span', [_c('el-form-item', {\n    attrs: {\n      \"label\": \"主诉\",\n      \"prop\": \"mainRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainRemark\", $$v)\n      },\n      expression: \"form.mainRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"现病史\",\n      \"prop\": \"mainCurrentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainCurrentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainCurrentRemark\", $$v)\n      },\n      expression: \"form.mainCurrentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"既往史\",\n      \"prop\": \"mainPastRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.mainPastRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"mainPastRemark\", $$v)\n      },\n      expression: \"form.mainPastRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"口腔检查\",\n      \"prop\": \"checkOralRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.checkOralRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"checkOralRemark\", $$v)\n      },\n      expression: \"form.checkOralRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"辅助检查\",\n      \"prop\": \"checkAuxiliaryRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.checkAuxiliaryRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"checkAuxiliaryRemark\", $$v)\n      },\n      expression: \"form.checkAuxiliaryRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"诊断\",\n      \"prop\": \"planDiagnosisRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.planDiagnosisRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"planDiagnosisRemark\", $$v)\n      },\n      expression: \"form.planDiagnosisRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"治疗方案\",\n      \"prop\": \"planTreatmentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.planTreatmentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"planTreatmentRemark\", $$v)\n      },\n      expression: \"form.planTreatmentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"处置\",\n      \"prop\": \"dmDisposalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.dmDisposalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"dmDisposalRemark\", $$v)\n      },\n      expression: \"form.dmDisposalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"医嘱\",\n      \"prop\": \"dmMedicalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.form.dmMedicalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.form, \"dmMedicalRemark\", $$v)\n      },\n      expression: \"form.dmMedicalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    on: {\n      \"click\": _vm.cancle\n    }\n  }, [_vm._v(\"取消\")]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.editTemplate('form', 'model')\n      }\n    }\n  }, [_vm._v(\"保存\")])], 1)], 1) : _vm._e()], 1)], 1) : _vm._e()])])]), _vm._v(\" \"), _c('el-dialog', {\n    attrs: {\n      \"title\": _vm.dialogTitle,\n      \"visible\": _vm.modelParent,\n      \"center\": \"\"\n    },\n    on: {\n      \"update:visible\": function($event) {\n        _vm.modelParent = $event\n      }\n    }\n  }, [_c('div', [_c('el-form', {\n    ref: \"parentForm\",\n    staticStyle: {\n      \"max-width\": \"700px\",\n      \"min-height\": \"400px\"\n    },\n    attrs: {\n      \"model\": _vm.parentForm,\n      \"rules\": _vm.parentRules,\n      \"label-width\": \"100px\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"上级目录\",\n      \"prop\": \"paramsName\"\n    }\n  }, [_c('el-cascader', {\n    ref: \"addParentCascader\",\n    staticStyle: {\n      \"width\": \"600px\"\n    },\n    attrs: {\n      \"options\": _vm.cascaderData,\n      \"props\": {\n        checkStrictly: true,\n        value: 'code',\n        label: 'name',\n        expandTrigger: 'hover'\n      },\n      \"change-on-select\": true,\n      \"expand-trigger\": \"hover\",\n      \"clearable\": \"\"\n    },\n    on: {\n      \"change\": _vm.handleChangeParent\n    },\n    model: {\n      value: (_vm.parentForm.paramsName),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"paramsName\", $$v)\n      },\n      expression: \"parentForm.paramsName\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"名称\",\n      \"prop\": \"teName\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入模板名称\"\n    },\n    model: {\n      value: (_vm.parentForm.teName),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"teName\", $$v)\n      },\n      expression: \"parentForm.teName\"\n    }\n  })], 1), _vm._v(\" \"), (!_vm.showPropOther) ? _c('div', [_c('br'), _c('br'), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submitForm('parentForm', 'menu')\n      }\n    }\n  }, [_vm._v(\"保存\")]), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.modelParent = false\n      }\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.showPropOther) ? _c('div', [_c('el-form-item', {\n    attrs: {\n      \"label\": \"主诉\",\n      \"prop\": \"mainRemark\"\n    }\n  }, [_c('el-input', {\n    model: {\n      value: (_vm.parentForm.mainRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainRemark\", $$v)\n      },\n      expression: \"parentForm.mainRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"现病史\",\n      \"prop\": \"mainCurrentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.mainCurrentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainCurrentRemark\", $$v)\n      },\n      expression: \"parentForm.mainCurrentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"既往史\",\n      \"prop\": \"mainPastRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.mainPastRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"mainPastRemark\", $$v)\n      },\n      expression: \"parentForm.mainPastRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"口腔检查\",\n      \"prop\": \"checkOralRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.checkOralRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"checkOralRemark\", $$v)\n      },\n      expression: \"parentForm.checkOralRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"辅助检查\",\n      \"prop\": \"checkAuxiliaryRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.checkAuxiliaryRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"checkAuxiliaryRemark\", $$v)\n      },\n      expression: \"parentForm.checkAuxiliaryRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"诊断\",\n      \"prop\": \"planDiagnosisRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.planDiagnosisRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"planDiagnosisRemark\", $$v)\n      },\n      expression: \"parentForm.planDiagnosisRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"治疗方案\",\n      \"prop\": \"planTreatmentRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.planTreatmentRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"planTreatmentRemark\", $$v)\n      },\n      expression: \"parentForm.planTreatmentRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"处置\",\n      \"prop\": \"dmDisposalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.dmDisposalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"dmDisposalRemark\", $$v)\n      },\n      expression: \"parentForm.dmDisposalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"医嘱\",\n      \"prop\": \"dmMedicalRemark\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"type\": \"textarea\"\n    },\n    model: {\n      value: (_vm.parentForm.dmMedicalRemark),\n      callback: function($$v) {\n        _vm.$set(_vm.parentForm, \"dmMedicalRemark\", $$v)\n      },\n      expression: \"parentForm.dmMedicalRemark\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submitForm('parentForm', 'model')\n      }\n    }\n  }, [_vm._v(\"保存\")]), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": function($event) {\n        _vm.modelParent = false\n      }\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1) : _vm._e()], 1)], 1)])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-5b657466\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/_vue-loader@12.2.2@vue-loader/lib/selector.js?type=template&index=0!./src/views/MedicalSetting/MedicalSetting.vue\n// module id = 1280\n// module chunks = 15"],"sourceRoot":""}